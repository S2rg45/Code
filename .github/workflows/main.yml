# This is a basic workflow to help you get started with Actions

name: trigger-code-glue

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:   
      - dev
      - main
    paths:
      - 'process-glue/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  TOKEN_ACTIONS: ${{ secrets.TOKEN_ACTIONS}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    environment: prod
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: Get changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v45
        with:
          files: |
            *.env
            *.py
      
      - name: Get changed files and write the outputs to a Txt file
        id: changed-files-write-output-files-txt
        uses: tj-actions/changed-files@v45
        with:
          write_output_files: true

      - uses: actions/checkout@v4

      - name: Generate Token
        id: generate_token
        run: |
          python - << EOF
          import secrets
          token = secrets.token_hex(5)
          EOF

      - name: Get info data
        run: |
          mkdir file-process
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            cp -r $file file-process
          done 
          tar -czvf files-folder.tar.gz file-process
          ls -la
      
      - name: Create release and upload compressed folder
        id: create-issue
        run: |
          # Crear el issue en el Repositorio B
          ISSUE_RESPONSE=$(curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.TOKEN_ACTIONS }}" \
            https://api.github.com/repos/DemoNubiral/MX216822-3-claro-cenam-infre-glue/issues \
            -d '{"title": "new process ETL Glue", "body": "This issue contains a new folder to be processed."}')

          echo "ISSUE_RESPONSE: $ISSUE_RESPONSE"

          # Extraer el nÃºmero del issue creado
          ISSUE_NUMBER=$(echo $ISSUE_RESPONSE | jq -r '.number')
          
          echo "ISSUE_NUMBER: $ISSUE_NUMBER"

          # Subir el archivo comprimido como comentario en el issue
          UPLOAD_URL=$(curl -X PUT \
            -H "Authorization: token ${{ secrets.TOKEN_ACTIONS }}" \
            -F "file=@files-folder.tar.gz" \
            https://uploads.github.com/repos/DemoNubiral/MX216822-3-claro-cenam-infre-glue/issues/$ISSUE_NUMBER/comments)
          
          echo "Issue created in Repo B with number: $ISSUE_NUMBER"
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_OUTPUT

      # - name: Convert changed files to JSON array
      #   id: json-array
      #   run: |
      #     # Convertir la cadena de archivos a un arreglo JSON
      #     JSON_ARRAY=$(echo '["'$(echo ${{ steps.changed-files.outputs.all_changed_files }} | sed 's/ /","/g')'"]')
      #     echo "Lista de archivos JSON: $JSON_ARRAY"
      #     echo "json_array=$JSON_ARRAY" >> $GITHUB_OUTPUT
      
      # Runs a single command using the runners shell
      - name: Trigger workflow infra
        env:
            ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}

        run: |
          if echo ${ALL_CHANGED_FILES} | grep -q ".github/workflows/main.yml"; then 
            echo "El archivo .github/workflows/main.yml ha sido modificado. No debe ser parte de este proceso."
            exit 1
          else
            curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $TOKEN_ACTIONS" \
            https://api.github.com/repos/DemoNubiral/MX216822-3-claro-cenam-infre-glue/dispatches \
            -d '{"event_type":"trigger-code", "ISSUE_NUMBER": "${{ steps.create-issue.outputs.ISSUE_NUMBER }}"}'
            -T files-folder.tar.gz
          fi
          
