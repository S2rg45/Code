# This is a basic workflow to help you get started with Actions

name: trigger-code-glue

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:   
      - dev
      - main
    paths:
      - 'process-glue/**'
      - '**.py'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: subir-a-s3-${{ github.ref }} # Agrupa por branch, para que no se solapen en el mismo branch
  cancel-in-progress: false

env:
  TOKEN_ACTIONS : ${{ secrets.TOKEN_ACTIONS}}
  REGION        : ${{ vars.REGION }}
  GH_TOKEN      : ${{ secrets.TOKEN_ACTIONS}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    environment: prod
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }} 

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11.10'

      - name: Install Python requests
        run: |
          pip install pytz
          pip install boto3
      
      - name: Instalar GitHub CLI
        run: |
          sudo apt install gh -y

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: Validate extension file
        id: changed-files-specific
        uses: tj-actions/changed-files@v45
        with:
          files: |
            *.env
            *.py

      - name: Get info data
        env:
            FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          if echo ${FILES} | grep -q "file-process.py"; then 
            echo "El archivo file-process.py no debe ser procesado"
            exit 1
          else
            mkdir file-process
            for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              cp -r $file file-process
            done 
            ls -la
            ls -la file-process
          fi

      
      - name: Send files to S3
        id: validate-folder
        run: |
          python file-process.py > output.txt

      - name: Process variables from file
        run: |
          while IFS= read -r line; do
            echo "Processing $line"
            export "$line"  # Exporta cada variable como una variable de entorno
          done < output.txt

      
      # - name: Validate create or update folders
      #   if: ${{ steps.validate-folder.outputs.status == 'update' }}
      #   run: | 
      #     echo "created infrastructure"
      #     exit 0

      # - name: Trigger workflow infra
      #   uses: peter-evans/repository-dispatch@v3
      #   if: ${{ steps.validate-folder.outputs.status == 'created' }}
      #   with:
      #     token: ${{ secrets.TOKEN_ACTIONS }}
      #     repository: DemoNubiral/MX216822-3-claro-cenam-infre-glue
      #     event-type: trigger-code
      #     client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", status}'
      
      # - name: Esperar finalización del workflow en Repo B
      #   if: ${{ steps.validate-folder.outputs.status == 'created' }}
      #   run: |
      #     sleep 50
      #     while true; do
      #       status=$(gh run list --repo DemoNubiral/MX216822-3-claro-cenam-infre-glue --json status --jq '.[0].status')
      #       echo "Estado actual: $status"
      #       if [[ "$status" == "completed" ]]; then
      #         conclusion=$(gh run list --repo DemoNubiral/MX216822-3-claro-cenam-infre-glue --json conclusion --jq '.[0].conclusion')
      #         echo "Conclusión del workflow: $conclusion"
      #         if [[ "$conclusion" == "success" ]]; then
      #           echo "Workflow completado exitosamente."
      #           break
      #         else
      #           echo "El workflow falló."
      #           exit 1
      #         fi
      #       fi
      #       echo "Esperando a que el workflow termine..."
      #       sleep 50  # Espera de 10 segundos antes de volver a verificar el estado
      #     done
          
